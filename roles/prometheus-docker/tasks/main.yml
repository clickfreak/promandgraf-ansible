---

- name: Configure Prometheus
  block:
    - name: Check Prometheus image
      community.docker.docker_image:
        name: "prom/prometheus:{{ prometheus_version }}"
        source: pull
        state: present

    - name: Check prometheus config dir
      ansible.builtin.file:
        path: "{{ prometheus_dir.dir }}"
        state: directory
        mode: "{{ prometheus_dir.mode|default('0755') }}"
        owner: "{{ prometheus_dir.user|default('nobody') }}"
        group: "{{ prometheus_dir.group|default('nogroup') }}"
        # FIXME: which user?
      loop:
        - dir: "{{ prometheus_storage_tsdb_path }}"
          mode: '0777'   # FIXME: set internal user id or use docker volume to keep prom data
        - dir: "{{ prometheus_config_dir }}"
#          mode: '0755'
        - dir: "{{ prometheus_config_dir }}/rules"
#          mode: '0755'
        - dir: "{{ prometheus_config_dir }}/targets.d"
#          mode: '0755'
      loop_control:
        loop_var: prometheus_dir
      notify:
        - Restart Prometheus container

    - name: Check prometheus default alert rules file
      ansible.builtin.copy:
        src: "default.rules"
        dest: "{{ prometheus_config_dir }}/rules/default.rules"
        mode: '0755'
        # FIXME: which user?

    - name: Check prometheus config
      ansible.builtin.template:
        src: "prometheus.yml.j2"
        dest: "{{ prometheus_config_dir }}/prometheus.yml"
      notify:
        - Restart Prometheus container
        # TODO: permissions

    - name: Check for docker group on host  # FIXME: little bit ugly
      ansible.builtin.group:
        name: docker
        state: present
      register: docker_group_info

    - name: Run Prometheus container
      community.docker.docker_container:
        name: prometheus
        image: "prom/prometheus:{{ prometheus_version }}"
        restart_policy: unless-stopped
        groups:
          - "{{ docker_group_info.gid }}"  # FIXME: it's a docker group on host
        command:
          - '--config.file={{ prometheus_config_file_path }}'
          - '--storage.tsdb.path={{ prometheus_storage_tsdb_path }}'
#          - '--web.console.libraries=/usr/share/prometheus/console_libraries'
#          - '--web.console.templates=/usr/share/prometheus/consoles'
          - '--storage.tsdb.retention.time={{ prometheus_retention_time }}'
        mounts:
          - source: '{{ prometheus_config_dir }}'
            target: '{{ prometheus_config_dir }}'
            read_only: true
            type: bind
          - source: '{{ prometheus_storage_tsdb_path }}'
            target: '{{ prometheus_storage_tsdb_path }}'
            type: bind
          - source: '/var/run/docker.sock'
            target: '/var/run/docker.sock'
            type: bind
            read_only: true
        ports:
          - 9090:9090  # TODO: use traefik
        # networks # TODO: split components into different networks
